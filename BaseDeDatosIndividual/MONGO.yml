---
# deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: bdovilla-namespace
  labels:
    app: mongo-server
spec:
  selector:
    matchLabels:
      app: mongo-server
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo-server
    spec:
      containers:
        - image: mongo:4.2.2 
          name: mongo-db1
          ports:
            - containerPort: 27017
              protocol: TCP
          volumeMounts:
            - mountPath: /data/db
              name: mongo-db-volume1
          env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: mongo-configmap
                  key: mongo.password
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: mongo-configmap
                  key: mongo.user
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mongo-configmap
                  key: mongo.db
          envFrom:
            - configMapRef:
                name: mongo-configmap
      volumes:
        - name: mongo-db-volume1
          persistentVolumeClaim:
            claimName: pvc-mongo-claim
---
# service
apiVersion: v1
kind: Service
metadata:
  name: service-mongo
  namespace: bdovilla-namespace
spec:
  selector:
    app: mongo-server 
  type: LoadBalancer
  ports:
  - port: 5302
    targetPort: 27017

---
#pv
apiVersion: v1
kind: PersistentVolume 
metadata:
  name: pv-mongo-vol
  namespace: bdovilla-namespace
spec: 
  storageClassName: mongo  
  capacity:
    storage: 10Gi 
  accessModes:
    - ReadWriteOnce 
  hostPath:
    path: "/mnt/mongo-vol" 

---
#pvc
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-mongo-claim
  namespace: bdovilla-namespace
spec:
  storageClassName: mongo 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
#storageclass
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongo
  namespace: bdovilla-namespace
provisioner: kubernetes.io/no-provisioner 
reclaimPolicy: Retain 
volumeBindingMode: WaitForFirstConsumer
---
# configMap
kind: ConfigMap 
apiVersion: v1 
metadata:
  name: mongo-configmap 
  namespace: bdovilla-namespace
data: 
  mongo.password: "Eduardo93"
  mongo.user: "eduardo"
  mongo.db: "bdov"
